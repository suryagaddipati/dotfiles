#!/usr/bin/env bash
#MISE description="Setup tmux plugin manager (TPM)"

set -euo pipefail

# Color definitions
BLUE='\033[0;34m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

# Environment variables
HOME_DIR="${HOME_DIR:-$HOME}"

printf "${BLUE}Setting up tmux plugin manager (TPM)...${NC}\n"
if [ ! -d "$HOME_DIR/.tmux/plugins/tpm" ]; then
    printf "${YELLOW}Installing TPM...${NC}\n"
    git clone https://github.com/tmux-plugins/tpm "$HOME_DIR/.tmux/plugins/tpm"
    printf "${GREEN}TPM installed successfully${NC}\n"
else
    printf "${GREEN}TPM already installed${NC}\n"
fi

# Link tmux config if not already linked
if [ ! -e "$HOME_DIR/.tmux.conf" ] && [ -f "/home/surya/code/dotfiles/.config/tmux/tmux.conf" ]; then
    printf "${YELLOW}Linking tmux configuration...${NC}\n"
    ln -sf "/home/surya/code/dotfiles/.config/tmux/tmux.conf" "$HOME_DIR/.tmux.conf"
fi

# Set TMUX_PLUGIN_MANAGER_PATH for plugin installation
export TMUX_PLUGIN_MANAGER_PATH="$HOME_DIR/.tmux/plugins/"

# Install or update plugins only if tmux is available and configured
if command -v tmux >/dev/null 2>&1; then
    if [ -f "$HOME_DIR/.tmux.conf" ]; then
        printf "${YELLOW}Installing/updating tmux plugins...${NC}\n"
        # Use tmux source-file to ensure config is loaded before plugin operations
        tmux source-file "$HOME_DIR/.tmux.conf" 2>/dev/null || true
        "$HOME_DIR/.tmux/plugins/tpm/bin/install_plugins" 2>/dev/null || printf "${YELLOW}Plugin installation will complete on next tmux start${NC}\n"
        printf "${GREEN}Tmux setup complete${NC}\n"
    else
        printf "${YELLOW}Tmux config not found, plugins will install on first tmux start${NC}\n"
    fi
else
    printf "${YELLOW}Tmux not available, plugins will install when tmux is started${NC}\n"
fi